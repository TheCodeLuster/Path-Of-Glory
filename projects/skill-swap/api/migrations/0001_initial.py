# Generated by Django 5.1.7 on 2025-04-06 15:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('scheduled_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Canceled', 'Canceled')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(max_length=100)),
                ('proficiency', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=20)),
                ('role', models.CharField(choices=[('User', 'User'), ('Admin', 'Admin')], default='User', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkillSwap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('offered_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_swaps', to='api.skill')),
                ('requested_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_swaps', to='api.skill')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_swaps', to='api.user')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_swaps', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.user')),
                ('date_of_birth', models.DateField()),
                ('occupation', models.CharField(choices=[('Accountant', 'Accountant'), ('Actor', 'Actor'), ('Actuary', 'Actuary'), ('Administrative Assistant', 'Administrative Assistant'), ('Architect', 'Architect'), ('Artist', 'Artist'), ('Biologist', 'Biologist'), ('Business Analyst', 'Business Analyst'), ('Carpenter', 'Carpenter'), ('Chef', 'Chef'), ('Civil Engineer', 'Civil Engineer'), ('Consultant', 'Consultant'), ('Dentist', 'Dentist'), ('Designer', 'Designer'), ('Web Developer', 'Web Developer'), ('Economist', 'Economist'), ('Electrician', 'Electrician'), ('Engineer', 'Engineer'), ('Financial Analyst', 'Financial Analyst'), ('Firefighter', 'Firefighter'), ('Graphic Designer', 'Graphic Designer'), ('Human Resources Manager', 'Human Resources Manager'), ('Journalist', 'Journalist'), ('Lawyer', 'Lawyer'), ('Librarian', 'Librarian'), ('Manager', 'Manager'), ('Mechanic', 'Mechanic'), ('Nurse', 'Nurse'), ('Nutritionist', 'Nutritionist'), ('Optometrist', 'Optometrist'), ('Pharmacist', 'Pharmacist'), ('Photographer', 'Photographer'), ('Physician', 'Physician'), ('Physicist', 'Physicist'), ('Pilot', 'Pilot'), ('Plumber', 'Plumber'), ('Police Officer', 'Police Officer'), ('Professor', 'Professor'), ('Programmer', 'Programmer'), ('Psychologist', 'Psychologist'), ('Receptionist', 'Receptionist'), ('Salesperson', 'Salesperson'), ('Scientist', 'Scientist'), ('Secretary', 'Secretary'), ('Software Engineer', 'Software Engineer'), ('Teacher', 'Teacher'), ('Technician', 'Technician'), ('Therapist', 'Therapist'), ('Translator', 'Translator'), ('Writer', 'Writer')], max_length=50)),
                ('skill_owned', models.CharField(max_length=50)),
                ('experience', models.DecimalField(decimal_places=1, max_digits=4)),
                ('location', models.CharField(max_length=70)),
                ('work_link', models.URLField(max_length=255)),
                ('description', models.TextField()),
                ('achievements', models.TextField()),
                ('profile_image', models.URLField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('Month', 'Month'), ('3-Months', '3-Months'), ('Year', 'Year')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Canceled', 'Canceled')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='skill',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='api.user'),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_preferences', models.JSONField()),
                ('privacy_settings', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='user_one',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_user_one', to='api.user'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='user_two',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_user_two', to='api.user'),
        ),
        migrations.CreateModel(
            name='CommunityMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Declined', 'Declined')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='api.communitygroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_memberships', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='communitygroup',
            name='admin_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administered_groups', to='api.user'),
        ),
        migrations.CreateModel(
            name='ClassRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Registered', 'Registered'), ('Attended', 'Attended'), ('Cancelled', 'Cancelled')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='api.class')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_registrations', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='api.user'),
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('event_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('swap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.skillswap')),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to='api.user')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to='api.user')),
            ],
            options={
                'unique_together': {('swap', 'reviewer')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='conversation',
            unique_together={('user_one', 'user_two')},
        ),
    ]
